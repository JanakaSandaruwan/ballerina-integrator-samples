name: Release to Ballerina Central

on:
  workflow_dispatch:
    inputs:
      ballerina_version:
        description: 'Ballerina version to use (e.g., 2201.8.0, latest, nightly)'
        required: false
        default: 'latest'
        type: string
      packages:
        description: 'Packages to release (comma-separated, or "all" for all packages)'
        required: true
        default: 'all'
        type: string
      bal_central_environment:
        description: 'Environment to release to'
        required: true
        default: 'DEV'
        type: choice
        options:
          - DEV
          - STAGING
          - PROD

jobs:
  discover-packages:
    runs-on: ubuntu-latest
    outputs:
      filtered_packages: ${{ steps.filter-packages.outputs.filtered_list }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Find and filter Ballerina packages
        id: filter-packages
        run: |
          package_dirs=$(find . -maxdepth 2 -name "Ballerina.toml" -exec dirname {} \; | sort | sed 's/.\///')
          all_packages=$(echo "$package_dirs" | jq -R -s -c 'split("\n") | map(select(length > 0))')
          
          input_packages="${{ github.event.inputs.packages }}"
          
          if [ "$input_packages" == "all" ]; then
            echo "filtered_list=$all_packages" >> $GITHUB_OUTPUT
            echo "Using all packages: $all_packages"
          else
            # Convert comma-separated list to JSON array
            input_packages_array=$(echo "$input_packages" | jq -R 'split(",") | map(. | gsub("^\\s+|\\s+$"; ""))')
          
            # Filter packages that exist in repository and were requested
            found_packages=$(echo "$package_dirs" | while read line; do
              if [ -n "$line" ]; then
                echo "$input_packages" | grep -q -E "(^|,)\\s*$line\\s*(,|$)" && echo "$line"
              fi
            done)
          
            filtered_json=$(echo "$found_packages" | jq -R -s -c 'split("\n") | map(select(length > 0))')
            echo "filtered_list=$filtered_json" >> $GITHUB_OUTPUT
            echo "Filtered packages: $filtered_json"
          fi

  release:
    needs: discover-packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJSON(needs.discover-packages.outputs.filtered_packages) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Ballerina
        uses: ballerina-platform/setup-ballerina@v1.1.3
        with:
          version: ${{ github.event.inputs.ballerina_version || 'latest' }}

      - name: Build Ballerina package
        run: |
          cd ${{ matrix.package }}
          bal pack

      - name: Push to Dev
        if: github.event.inputs.bal_central_environment == 'DEV'
        run: bal push
        working-directory: ./${{ matrix.package }}
        env:
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_DEV_ACCESS_TOKEN }}
          JAVA_HOME: /usr/lib/jvm/default-jvm

      - name: Push to Staging
        if: github.event.inputs.bal_central_environment == 'STAGING'
        run: bal push
        working-directory: ./${{ matrix.package }}
        env:
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_STAGING_ACCESS_TOKEN }}
          JAVA_HOME: /usr/lib/jvm/default-jvm

      - name: Push to Production
        if: github.event.inputs.bal_central_environment == 'PROD'
        run: bal push
        working-directory: ./${{ matrix.package }}
        env:
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_PROD_ACCESS_TOKEN }}
          JAVA_HOME: /usr/lib/jvm/default-jvm
